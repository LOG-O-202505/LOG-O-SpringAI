server:
  port: 8080
spring:
  main:
    allow-bean-definition-overriding: true
  ai:
    openai:
      api-key: ${OPENAI_API_KEY}
      chat:
        options:
          model: ${GPT_MODEL}
    anthropic:
      api-key: ${ANTHROPIC_API_KEY}
      chat:
        options:
          model: ${CLAUDE_MODEL}
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    hibernate:
      ddl-auto: create
#      naming:
        # 물리적 이름 전략 변경 - 대소문자 구분 없이 그대로 사용
#        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    database-platform: org.hibernate.dialect.MySQLDialect
  security:
    oauth2:
      client:
        # OAuth2 인증 제공자(카카오)에 대한 설정 정보를 포함합니다.
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
        # 클라이언트 애플리케이션(Spring Boot)에 대한 설정을 포함합니다.
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${BASE_URL}/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - profile_nickname
              - profile_image
              - account_email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${BASE_URL}/login/oauth2/code/naver
            authorization-grant-type: authorization_code
            client-name: naver
            scope:
              - name
              - email
              - profile_image
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: ${BASE_URL}/login/oauth2/code/google
            authorization-grant-type: authorization_code
            client-name: google
            scope:
              - email
              - profile
  mvc:
    static-path-pattern: /**
  web:
    resources:
      static-locations: classpath:/static/
# JWT 설정
jwt:
  secret: ${JWT_SECRET}
  access-token-validity: 36000 # 10시간
  refresh-token-validity: 604800 # 7일

# 로깅 설정
logging:
  level:
    com.ssafy.logoserver: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  port: 8080

# Swagger 설정
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  packages-to-scan: com.ssafy.logoserver
  default-consumes-media-type: application/json
  default-produces-media-type: application/json